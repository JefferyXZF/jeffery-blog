(window.webpackJsonp=window.webpackJsonp||[]).push([[153],{586:function(t,s,e){"use strict";e.r(s);var i=e(11),n=Object(i.a)({},(function(){var t=this.$createElement,s=this._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[s("h1",{attrs:{id:"迭代模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#迭代模式"}},[this._v("#")]),this._v(" 迭代模式")]),this._v(" "),s("p",[this._v("迭代模式可以顺序访问一个聚集中的元素而不必暴露聚集的内部表象。多个对象聚在一起形成的总体称之为聚集，聚集对象是能够包容一组对象的容器对象。迭代子模式将迭代逻辑封装到一个独立的子对象中，从而与聚集本身隔开。")]),this._v(" "),s("p",[this._v("迭代模式简化了聚集的界面。每一个聚集对象都可以有一个或一个以上的迭代子对象，每一个迭代子的迭代状态可以是彼此独立的。迭代算法可以独立于聚集角色变化。")])])}),[],!1,null,null,null);s.default=n.exports}}]);